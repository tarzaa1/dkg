apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubequery
  namespace: dkg
  labels:
    app: kubequery
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kubequery
  template:
    metadata:
      labels:
        app: kubequery
    spec:
      serviceAccountName: dependencies-sa
      initContainers:
        - name: check-pods-ready
          image: bitnami/kubectl
          command:
            - 'sh'
            - '-c'
            - >
              until kubectl get pod neo4j-0 -n dkg -o jsonpath='{.status.conditions[?(@.type=="Ready")].status}' | grep True; do
                echo "Waiting for neo4j-0 pod to be ready...";
                sleep 5;
              done;
              echo "neo4j-0 pod is ready."
      containers:
        - name: kubequery
          image: tareqz/kubequery:1.0
          ports:
            - containerPort: 5000
          env:
            - name: NEO4J_URI
              value: bolt://neo4j.dkg.svc:7687
            - name: NEO4J_AUTH
              valueFrom:
                secretKeyRef:
                  name: neo4j-auth
                  key: NEO4J_AUTH
            - name: FLASK_HOST
              value: "0.0.0.0"
            - name: FLASK_PORT
              value: "5000"

---

apiVersion: v1
kind: Service
metadata:
  name: kubequery
  namespace: dkg
spec:
  type: NodePort
  ports:
    - port: 5000
      targetPort: 5000
      nodePort: 30094
  selector:
    app: kubequery
