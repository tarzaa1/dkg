apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubegrapher
  namespace: dkg
  labels:
    app: kubegrapher
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kubegrapher
  template:
    metadata:
      labels:
        app: kubegrapher
    spec:
      serviceAccountName: dependencies-sa
      initContainers:
        - name: check-dependencies-ready
          image: bitnami/kubectl
          command:
            - sh
            - -c
            - |
              echo "Waiting for neo4j and kubeinsights to be ready..."
              # Wait for neo4j-0 Pod in the 'dkg' namespace
              until kubectl get pod neo4j-0 -n dkg -o jsonpath='{.status.conditions[?(@.type=="Ready")].status}' | grep True; do
                echo "Waiting for neo4j-0 pod to be ready...";
                sleep 5;
              done;
              echo "neo4j-0 pod is ready."
              # Wait for kubeinsights Deployment in the 'dkg' namespace
              until kubectl get deployment kubeinsights -n dkg -o jsonpath='{.status.readyReplicas}' | grep -q 1; do
                echo "Waiting for kubeinsights Deployment..."
                sleep 5
              done
              echo "All dependencies are ready."
      containers:
        - name: kubegrapher
          image: tareqz/kubegrapher:1.2
          imagePullPolicy: Always
          envFrom:
            - configMapRef:
                name: kubegrapher-config
          env:
            - name: AUTH
              valueFrom:
                secretKeyRef:
                  name: neo4j-auth
                  key: NEO4J_AUTH

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: kubegrapher-config
  namespace: dkg
data:
  KAFKA_BROKER_URL: "kafka-clusterip.dkg.svc:9092"
  KAFKA_TOPIC: "cluster1"
  KAFKA_GROUP_ID: "foo"
  DATA_SOURCE: "kafka"
  URI: "bolt://neo4j.dkg.svc:7687"
  HEDERA_NODE_URL: "10.18.1.35:50211"
  NETWORK_ACCOUNT_ID: "0.0.3"
  HEDERA_MIRROR_NODE_URL: "10.18.1.35:5600"
  OPERATOR_ACCOUNT_ID: "0.0.2"
  HEDERA_TOPIC: "0.0.1003"
  OPERATOR_PRIVATE_KEY: "302e020100300506032b65700422042091132178e72057a1d7528025956fe39b0b847f200ab59b2fdd367017f3087137"

